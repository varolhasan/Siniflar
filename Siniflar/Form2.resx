<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SlKBSlKBSlKBSlKBSlKD/9k=
</value>
  </data>
</root>